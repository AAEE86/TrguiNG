name: 'build'

on:
  workflow_dispatch:
  push:
    tags:
      - v**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-binaries:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.platform.os }}
    steps:
    - uses: actions/checkout@v3

    - name: setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'

    - name: 'Setup Rust'
      if: matrix.platform.rust_target == 'aarch64-apple-darwin'
      run: rustup target add aarch64-apple-darwin

    - uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ matrix.platform.rust_target }}
        workspaces: |
          src-tauri

    - name: install dependencies (ubuntu only)
      if: matrix.platform.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf libasound2-dev

    - name: install npm packages
      run: npm ci

    - uses: qu1ck/action-tauri-build@5c69c9fdbb4231a738b4a668a2caddf6af45eab8
      id: tauri_build
      with:
        target: ${{ matrix.platform.rust_target }}

    # The artifacts output can now be used to upload the artifacts
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.platform.rust_target }}
        path: "${{ join(fromJSON(steps.tauri_build.outputs.artifacts), '\n') }}"

    - name: pack webapp
      if: matrix.platform.os == 'ubuntu-latest'
      working-directory: dist
      id: pack-webapp
      run: |
        GIT_VERSION=`git describe --tags --always`
        zip "trguing-web-$GIT_VERSION.zip" ./* -x create\* -x \*.map
        echo "ZIPFILE=trguing-web-$GIT_VERSION.zip" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v3
      if: matrix.platform.os == 'ubuntu-latest'
      with:
        name: build web
        path: "dist/${{ steps.pack-webapp.outputs.ZIPFILE }}"

  publish:
    needs: build-binaries
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      # Download the previously uploaded artifacts
      - uses: actions/download-artifact@v3
        id: download
        with:
          path: artifacts
      - name: Rename mac app archives
        run: |
          mv artifacts/x86_64-apple-darwin/TrguiNG.app.tar.gz artifacts/x86_64-apple-darwin/TrguiNG_x86_64.app.tar.gz
          mv artifacts/aarch64-apple-darwin/TrguiNG.app.tar.gz artifacts/aarch64-apple-darwin/TrguiNG_aarch64.app.tar.gz
      - name: Downloaded artifacts
        run: ls -lhR artifacts/
      # And create a release with the artifacts attached
      - name: 'create release'
        uses: softprops/action-gh-release@v0.1.15
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          draft: true
          files: ./artifacts/**/*
